{"version":3,"sources":["Store/types.js","Store/contacts-reducer.js","Store/store.js","Components/App/App.styled.jsx","Components/ContactsForm/ContactsForm.styled.jsx","Components/Buttons/Buttons.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Store/actions.js","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","index.js"],"names":["ADD","REMOVE","combineReducers","items","state","type","payload","filter","contact","id","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","PrimaryTitle","styled","h1","SecondaryTitle","h2","Form","form","Label","label","Input","input","Button","button","ContactsForm","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","onSubmit","props","this","action","htmlFor","onChange","pattern","title","required","Component","connect","item","dispatch","data","types","uuidv4","addContact","List","ul","ListItem","li","nameFilter","toLowerCase","includes","deleteId","removeContact","map","onClick","Wrapper","div","Filter","getFilterName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10ee520a.chunk.js","sourcesContent":["const ADD = 'contacts/add';\nconst SHOW = 'contacts/show';\nconst REMOVE = 'contacts/remove';\nconst HANDLE_FILTER = 'contacts/handleFilter';\n\nexport {ADD, SHOW, REMOVE, HANDLE_FILTER};\n\n","import { combineReducers } from 'redux';\r\nimport {ADD, REMOVE} from './types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case ADD:\r\n            return [...state, payload];\r\n        case REMOVE:\r\n            return state.filter((contact) => payload !== contact.id);\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};\r\n\r\nconst filter = (state = '', action) => {\r\n    return state;\r\n};\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import {createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n\r\n ","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\nmargin-left: 75px;\ncolor: gray;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 75px;\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #0eebdc;\r\n  border: none;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #15c2b6;\r\n  }\r\n`;","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../Store/actions';\r\nimport { Form, Label, Input } from './ContactsForm.styled';\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\nclass ContactsForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const { onSubmit } = this.props;\r\n\r\n        onSubmit(name, number);\r\n        this.setState({\r\n            name: \"\", number: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { name, number } = this.state;\r\n        return (\r\n            <Form action=\"\" onSubmit={handleSubmit}>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <Label htmlFor=\"number\">Number</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <Button type=\"submit\"> Add contact</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.item,\r\n})\r\n \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: data => dispatch(addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);","import {ADD, REMOVE, HANDLE_FILTER} from './types';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = data => ({\r\n    types: ADD,\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: data.name,\r\n        number: data.number,\r\n    }\r\n})\r\n\r\nexport const removeContact = (id) => ({\r\n    types: REMOVE,\r\n    payload: id,\r\n});\r\n\r\nexport const filterContact = (value) => ({\r\n    types: HANDLE_FILTER,\r\n    payload: value,\r\n});\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;","import { connect } from 'react-redux';\r\nimport { removeContact } from '../../Store/actions';\r\nimport { List, ListItem } from \"./ContactsList.styled\";\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\nfunction ContactsList ({ contacts, deleteId }) {\r\n    return (\r\n        <div>\r\n            <List>\r\n                {contacts.map((contact) => {\r\n                    const { id, name, number } = contact;\r\n                    return (\r\n                        <ListItem key={id}>\r\n                            {name} - {number}{\" \"}\r\n                            <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                                Delete\r\n                            </Button>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst nameFilter = (state) => {\r\n    return state.contacts.items.filter((contact) =>\r\n        contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase()));\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: nameFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteId: (id) => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import { Component } from \"react\";\r\nimport { Wrapper, Label, Input } from \"./Filter.styled\";\r\n\r\nexport class Filter extends Component {\r\n    getFilterName = (e) => {\r\n        const { onChange } = this.props;\r\n\r\n        return onChange(e.currentTarget.value);\r\n    };\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <Wrapper>\r\n                <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}\r\n                    onChange={this.getFilterName}\r\n                />\r\n            </Wrapper>\r\n        );\r\n    };\r\n};\r\n","// import { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\nimport  ContactsForm  from \"../ContactsForm/ContactsForm.jsx\";\nimport ContactsList from \"../ContactsList/ContactsList.jsx\";\nimport { Filter } from \"../Filter/Filter.jsx\";\n// import toast, { Toaster } from \"react-hot-toast\";\n\nexport function App() {\n  return (\n     <>\n        <PrimaryTitle>Phonebook</PrimaryTitle>\n        <ContactsForm  />\n\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Filter  />\n        <ContactsList  />\n\n      </>\n  )\n}\n\n  // state = {\n  //   contacts: [\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n  // };\n\n  // componentDidUpdate(prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  // componentDidMount() {\n  //   const storageContacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(storageContacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // handleFilter = (text) => {\n  //   this.setState({ filter: text });\n  // };\n\n  // addContact = (name, number) => {\n  //   const { contacts } = this.state;\n  //   const newContact = { id: uuidv4(), name, number };\n\n  //   contacts.some(\n  //     (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n  //   )\n  //     ? toast(`${newContact.name} is already in contacts`, {\n  //         icon: \"👏\",\n  //         style: {\n  //           borderRadius: \"10px\",\n  //           background: \"#333\",\n  //           color: \"#fff\",\n  //           duration: 4000,\n  //         },\n  //       })\n  //     : this.setState({\n  //         contacts: [newContact, ...contacts],\n  //       });\n  // };\n\n  // showContacts = () => {\n  //   const { filter, contacts } = this.state;\n  //   const lowerSymbol = filter.toLowerCase();\n  //   return contacts.filter((contacts) =>\n  //     contacts.name.toLowerCase().includes(lowerSymbol)\n  //   );\n  // };\n\n  // removeContact = (id) => {\n  //   const { contacts } = this.state;\n  //   this.setState({\n  //     contacts: contacts.filter((contact) => contact.id !== id),\n  //   });\n  // };\n\n  // render() {\n  //   const { handleFilter, addContact, showContacts, removeContact, state } =\n  //     this;\n  //   return (\n  //     <>\n  //       <PrimaryTitle>Phonebook</PrimaryTitle>\n  //       <ContactsForm onSubmit={addContact} />\n\n  //       <SecondaryTitle>Contacts</SecondaryTitle>\n  //       <Filter onChange={handleFilter} value={state.filter} />\n  //       <ContactsList contacts={showContacts()} deleteId={removeContact} />\n  //       <Toaster />\n  //     </>\n  //   );\n  // }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Store/store';\nimport './index.css';\nimport { App } from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}